/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import dados.AutorDAO;
import dados.CdDao;
import dados.ItemAutorDao;
import dados.LivroDao;
import dados.RevistaDao;
import entidades.Autor;
import entidades.Cd;
import entidades.ItemAutor;
import entidades.Livro;
import entidades.Revista;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Total Energies
 */
public class FrmAddAutoria extends javax.swing.JFrame {

    /**
     * Creates new form AddLivro
     */
    String txtGlobal = "";

    public FrmAddAutoria(String txt) {
        initComponents();
        this.setLocationRelativeTo(null); // centraliza o JFrame
        this.setResizable(false);
        txtGlobal = txt;
        this.carregaComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        cmbAutores = new javax.swing.JComboBox<>();
        cmbItens = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adicionar autoria");

        jLabel1.setText("Autores");

        jLabel2.setText("Itens");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        cmbAutores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        cmbItens.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAutores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbItens, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbAutores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnVoltar))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        this.salvarAutor();
        this.carregaComboBox();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        FrmMenuSecretario frmSec = new FrmMenuSecretario(txtGlobal);
        frmSec.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAddAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAddAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAddAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAddAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAddAutoria("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cmbAutores;
    private javax.swing.JComboBox<String> cmbItens;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private void salvarAutor() {
        if (cmbAutores.getSelectedItem().toString().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Atenção: o campo autor é obrigatório!");
            return;
        }

        if (cmbItens.getSelectedItem().toString().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Aten��o: o campo item é obrigatório!");
            return;
        }

        try {
            int idAutor, idItem;

            if (pegaNumInStr(cmbAutores.getSelectedItem().toString()).equals("") || pegaNumInStr(cmbItens.getSelectedItem().toString()).equals("")) {
                return;
            }

            idAutor = Integer.parseInt(pegaNumInStr(cmbAutores.getSelectedItem().toString()));
            idItem = Integer.parseInt(pegaNumInStr(cmbItens.getSelectedItem().toString()));
            Autor autor = new Autor();
            autor.setIdAutor(idAutor);
            Livro item = new Livro();
            item.setIdItem(idItem);

            ItemAutor autoria = new ItemAutor(item, autor);

            ItemAutorDao itemautorDao = new ItemAutorDao();
            itemautorDao.inserirItemAutor(autoria);
            //Mensagem
            JOptionPane.showMessageDialog(null, "Autoria inserida com sucesso");

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro no frmAddItemAutor: " + erro);
        }
    }

    private void carregaComboBox() {
        try {
            ArrayList<Autor> listaAutores;
            ArrayList<Livro> listaLivros;
            ArrayList<Revista> listaRevistas;
            ArrayList<Cd> listaCds;

            AutorDAO autorDao = new AutorDAO();
            listaAutores = autorDao.listarAutor();

            for (Autor autor : listaAutores) {
                cmbAutores.addItem(autor.getIdAutor() + ":" + autor.getNome() + " " + autor.getSobrenome());
            }

            LivroDao livroDao = new LivroDao();
            listaLivros = livroDao.listarLivro();

            for (Livro item : listaLivros) {
                cmbItens.addItem(item.getIdItem() + ":" + item.getTitulo());
            }

            RevistaDao revistaDao = new RevistaDao();
            listaRevistas = revistaDao.listarRevista();

            for (Revista item : listaRevistas) {
                cmbItens.addItem(item.getIdItem() + ":" + item.getTitulo());
            }

            CdDao cdDao = new CdDao();
            listaCds = cdDao.listarCd();

            for (Cd item : listaCds) {
                cmbItens.addItem(item.getIdItem() + ":" + item.getTitulo());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no fcarregar comboBox em FrmAddAutoria " + e);
        }
    }

    private String pegaNumInStr(String str) {
        String res = "";
        if (Character.isDigit(str.charAt(0))) {
            for (int i = 0; i < str.length() && Character.isDigit(str.charAt(i)); i++) {
                res += Character.toString(str.charAt(i));
            }
        }
        return res;
    }
}
